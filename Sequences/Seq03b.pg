## DESCRIPTION
## Formula answer template
## ENDDESCRIPTION


## DBsubject(WeBWorK)
## DBchapter(Critical Thinking)
## DBsection(Fort Lewis tutorial 2011)
## Date(04/26/2018)
## Institution(SUNY Oneonta)
## Author(Christopher Smith)
## MO(1)
## KEYWORDS('sequence','pattern')


###########################
#  Initialization

DOCUMENT();
loadMacros(
"PGstandard.pl",
"parserPopUp.pl",
  "PGstandard.pl",
  "PGML.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "scaffold.pl",
  "PGcourse.pl",
  "PGbasicmacros.pl",
  "PGchoicemacros.pl",
  "PGanswermacros.pl",
  "PGgraphmacros.pl",
  "extraAnswerEvaluators.pl",
  "PGauxiliaryFunctions.pl",
  "contextArbitraryString.pl",
  "parserOneOf.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

# the arguments of PopUp are [list of answers], correct answer
# Answer to Dropdown menu in part 2, NEVER MOVE THIS   
$popup = PopUp(["-----------", "arithmetic", "geometric", "neither"], "neither");

Context()->variables->add(c => "Real");

# Part 1 answer has been localized for convenience

$RanVal = random(2,6); # Initial n value, needed as global variable
$constant = random(-5,5); # Constant applied to each number in sequence
while($constant == 0)
{
    $constant = random(-5,5); # Ensure constant is not 0
}

$ConstantMod = random(1,4); # Modifies the constant value
$constant *= $ConstantMod;

# Answer to part 3 is stored locally only as a formula

$part1Form = Formula("x^2 + $constant"); # Requires VERY careful phrasing, but works

# Answer to part 4, 
$x = random(20,40);
$temp = $x; # Can't alter x, need it for presentation purposes


Scaffold::Begin();

###########################################
Section::Begin("Part 1: Analyzing Sequences");

Context()->texStrings;
BEGIN_PGML

Assume the pattern continues. Find the next three terms in the following sequence:

[$part1Form->eval(x=>$RanVal)], [$part1Form->eval(x=>$RanVal+1)], [$part1Form->eval(x=>$RanVal+2)], [$part1Form->eval(x=>$RanVal+3)], [$part1Form->eval(x=>$RanVal+4)], [__]{$part1Form->eval(x=>$RanVal+5)}, [__]{$part1Form->eval(x=>$RanVal+6)}, [__]{$part1Form->eval(x=>$RanVal+7)}

END_PGML

Section::End();

###########################################
Section::Begin("Part 2: Categorizing Sequences");

BEGIN_TEXT

Is the sequence arithmetic, geometric or neither?
\{ $popup->menu() \}

END_TEXT

ANS( $popup->cmp() );

Context()->texStrings;

Context()->normalStrings;

Section::End();

###########################################
Section::Begin("Part 3: Formulas for Sequences");

#Context("ArbitraryString");
Context("Numeric"); # Must define all letters used in math formula
Context()->variables->add(d => 'Real');
Context()->variables->add(n => 'Real');

$SeqForm = Formula("(n^2) + d");

BEGIN_PGML

Find a formula for the nth term of the sequence ([`a_{n}`]):
[@ $PAR @]*
Use [`d`] as the constant difference.  
    
[@ $PAR @]*
[`a_{n}`] = [_____________]{$SeqForm} 

END_PGML
Context()->normalStrings;
Section::End();

###########################################
Section::Begin("Part 4: Finding Terms in a Sequence");

BEGIN_PGML

Find the [$x]th term of the sequence used in part 1. [________________]{$part1Form->eval(x=>$temp)}

END_PGML

Section::End();
###########################################

Scaffold::End();
ENDDOCUMENT();